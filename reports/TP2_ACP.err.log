Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 626, in _async_poll_for_reply
    msg = await ensure_async(self.kc.shell_channel.get_msg(timeout=new_timeout))
  File "/usr/local/lib/python3.9/site-packages/nbclient/util.py", line 96, in ensure_async
    result = await obj
  File "/usr/local/lib/python3.9/site-packages/jupyter_client/channels.py", line 315, in get_msg
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.9/3.9.18/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 838, in async_execute_cell
    exec_reply = await self.task_poll_for_reply
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 650, in _async_poll_for_reply
    await self._async_handle_timeout(timeout, cell)
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 697, in _async_handle_timeout
    raise CellTimeoutError.error_from_timeout_and_cell(
nbclient.exceptions.CellTimeoutError: A cell timed out while it was being executed, after 30 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
['from sklearn.datasets import fetch_openml', 'import matplotlib', "Xmnist, ymnist = fetch_openml('mnist_784', version=1, return_X_y=True)", '', 'def planche(X):']
...
['    plt.imshow(image, cmap = matplotlib.cm.binary)', '    plt.axis("off")', '    plt.show()', '', 'planche(Xmnist)']
-------------------

