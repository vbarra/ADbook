Traceback (most recent call last):
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
X = np.loadtxt("./data/data.csv", delimiter=",")[:,1]


def ArithmeticMean(X):
    # calculable directement avec np.mean(X)
    return float(sum(X)) / len(X)

def GeometricMean(X):
    n=len(X)
    p=1 
    i=0 
    for i in range(n):
        p*=X[i] 
    return float(p**(1/n))

def HarmonicMean(X):
    n=len(X)
    i=0
    s=0
    for i in range(n):
        s += 1/X[i] 
    return len(X) / s

def WeightedMean(X):
    # Exemples de poids
    w = np.random.rand(len(X))
    return np.average(X,weights=w)


plt.figure(figsize=(18,6))
sns.rugplot(X, color='grey', height=0.5)
for method, style, title in ((ArithmeticMean,'r','Arithm√©tique'),(GeometricMean,'b','G√©om√©trique'),
                             (HarmonicMean,'g','Harmonique'),(WeightedMean,'y', 'Pond√©r√©e')):
    m=method(X)
    print (method.__name__, " : ",m)
    plt.plot([m,m],[0,1],style,label=title)
plt.legend()
plt.tight_layout()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 3>[0;34m()[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[0;32m----> 3[0m [38;5;28;01mimport[39;00m [38;5;21;01mseaborn[39;00m [38;5;28;01mas[39;00m [38;5;21;01msns[39;00m
[1;32m      4[0m X [38;5;241m=[39m np[38;5;241m.[39mloadtxt([38;5;124m"[39m[38;5;124m./data/data.csv[39m[38;5;124m"[39m, delimiter[38;5;241m=[39m[38;5;124m"[39m[38;5;124m,[39m[38;5;124m"[39m)[:,[38;5;241m1[39m]
[1;32m      7[0m [38;5;28;01mdef[39;00m [38;5;21mArithmeticMean[39m(X):
[1;32m      8[0m     [38;5;66;03m# calculable directement avec np.mean(X)[39;00m

[0;31mModuleNotFoundError[0m: No module named 'seaborn'
ModuleNotFoundError: No module named 'seaborn'

