Traceback (most recent call last):
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
X = np.loadtxt("./data/data.csv", delimiter=",")[:,1]


def ArithmeticMean(X):
    # calculable directement avec np.mean(X)
    return float(sum(X)) / len(X)

def GeometricMean(X):
    n=len(X)
    p=1 
    i=0 
    for i in range(n):
        p*=X[i] 
    return float(p**(1/n))

def HarmonicMean(X):
    n=len(X)
    i=0
    s=0
    for i in range(n):
        s += 1/X[i] 
    return len(X) / s

def WeightedMean(X):
    # Exemples de poids
    w = np.random.rand(len(X))
    return np.average(X,weights=w)


plt.figure(figsize=(18,6))
sns.rugplot(X, color='grey', height=0.5)
for method, style, title in ((ArithmeticMean,'r','Arithm√©tique'),(GeometricMean,'b','G√©om√©trique'),
                             (HarmonicMean,'g','Harmonique'),(WeightedMean,'y', 'Pond√©r√©e')):
    m=method(X)
    print (method.__name__, " : ",m)
    plt.plot([m,m],[0,1],style,label=title)
plt.legend()
plt.tight_layout()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 31>[0;34m()[0m
[1;32m     27[0m     w [38;5;241m=[39m np[38;5;241m.[39mrandom[38;5;241m.[39mrand([38;5;28mlen[39m(X))
[1;32m     28[0m     [38;5;28;01mreturn[39;00m np[38;5;241m.[39maverage(X,weights[38;5;241m=[39mw)
[0;32m---> 31[0m [43mplt[49m[38;5;241m.[39mfigure(figsize[38;5;241m=[39m([38;5;241m18[39m,[38;5;241m6[39m))
[1;32m     32[0m sns[38;5;241m.[39mrugplot(X, color[38;5;241m=[39m[38;5;124m'[39m[38;5;124mgrey[39m[38;5;124m'[39m, height[38;5;241m=[39m[38;5;241m0.5[39m)
[1;32m     33[0m [38;5;28;01mfor[39;00m method, style, title [38;5;129;01min[39;00m ((ArithmeticMean,[38;5;124m'[39m[38;5;124mr[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mArithm√©tique[39m[38;5;124m'[39m),(GeometricMean,[38;5;124m'[39m[38;5;124mb[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mG√©om√©trique[39m[38;5;124m'[39m),
[1;32m     34[0m                              (HarmonicMean,[38;5;124m'[39m[38;5;124mg[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mHarmonique[39m[38;5;124m'[39m),(WeightedMean,[38;5;124m'[39m[38;5;124my[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mPond√©r√©e[39m[38;5;124m'[39m)):

[0;31mNameError[0m: name 'plt' is not defined
NameError: name 'plt' is not defined

