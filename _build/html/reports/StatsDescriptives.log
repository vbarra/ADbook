Traceback (most recent call last):
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/vibarra/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
X = np.loadtxt("./data/data.csv", delimiter=",")[:,1]


def ArithmeticMean(X):
    # calculable directement avec np.mean(X)
    return float(sum(X)) / len(X)

def GeometricMean(X):
    n=len(X)
    p=1 
    i=0 
    for i in range(n):
        p*=X[i] 
    return float(p**(1/n))

def HarmonicMean(X):
    n=len(X)
    i=0
    s=0
    for i in range(n):
        s += 1/X[i] 
    return len(X) / s

def WeightedMean(X):
    # Exemples de poids
    w = np.random.rand(len(X))
    return np.average(X,weights=w)


plt.figure(figsize=(16,8))
plt.plot(X, [0.01]*len(X), '|', color='k',fontsize=16,label='Points')
for method, style, title in ((ArithmeticMean,'r','Arithm√©tique'),(GeometricMean,'b','G√©om√©trique'),
                             (HarmonicMean,'g','Harmonique'),(WeightedMean,'y', 'Pond√©r√©e')):
    m=method(X)
    print (method.__name__, " : ",m)
    plt.plot([m,m],[0,1],style,fontsize=16,label=title)
plt.legend()
plt.tight_layout()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 33>[0;34m()[0m
[1;32m     29[0m     [38;5;28;01mreturn[39;00m np[38;5;241m.[39maverage(X,weights[38;5;241m=[39mw)
[1;32m     32[0m plt[38;5;241m.[39mfigure(figsize[38;5;241m=[39m([38;5;241m16[39m,[38;5;241m8[39m))
[0;32m---> 33[0m [43mplt[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43m[[49m[38;5;241;43m0.01[39;49m[43m][49m[38;5;241;43m*[39;49m[38;5;28;43mlen[39;49m[43m([49m[43mX[49m[43m)[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43m|[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mcolor[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mk[39;49m[38;5;124;43m'[39;49m[43m,[49m[43mfontsize[49m[38;5;241;43m=[39;49m[38;5;241;43m16[39;49m[43m,[49m[43mlabel[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mPoints[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     34[0m [38;5;28;01mfor[39;00m method, style, title [38;5;129;01min[39;00m ((ArithmeticMean,[38;5;124m'[39m[38;5;124mr[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mArithm√©tique[39m[38;5;124m'[39m),(GeometricMean,[38;5;124m'[39m[38;5;124mb[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mG√©om√©trique[39m[38;5;124m'[39m),
[1;32m     35[0m                              (HarmonicMean,[38;5;124m'[39m[38;5;124mg[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mHarmonique[39m[38;5;124m'[39m),(WeightedMean,[38;5;124m'[39m[38;5;124my[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mPond√©r√©e[39m[38;5;124m'[39m)):
[1;32m     36[0m     m[38;5;241m=[39mmethod(X)

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/pyplot.py:2769[0m, in [0;36mplot[0;34m(scalex, scaley, data, *args, **kwargs)[0m
[1;32m   2767[0m [38;5;129m@_copy_docstring_and_deprecators[39m(Axes[38;5;241m.[39mplot)
[1;32m   2768[0m [38;5;28;01mdef[39;00m [38;5;21mplot[39m([38;5;241m*[39margs, scalex[38;5;241m=[39m[38;5;28;01mTrue[39;00m, scaley[38;5;241m=[39m[38;5;28;01mTrue[39;00m, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m-> 2769[0m     [38;5;28;01mreturn[39;00m [43mgca[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m
[1;32m   2770[0m [43m        [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[43mscalex[49m[38;5;241;43m=[39;49m[43mscalex[49m[43m,[49m[43m [49m[43mscaley[49m[38;5;241;43m=[39;49m[43mscaley[49m[43m,[49m
[1;32m   2771[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43m([49m[43m{[49m[38;5;124;43m"[39;49m[38;5;124;43mdata[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[43mdata[49m[43m}[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mdata[49m[43m [49m[38;5;129;43;01mis[39;49;00m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[43m{[49m[43m}[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/axes/_axes.py:1632[0m, in [0;36mAxes.plot[0;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[1;32m   1390[0m [38;5;124;03m"""[39;00m
[1;32m   1391[0m [38;5;124;03mPlot y versus x as lines and/or markers.[39;00m
[1;32m   1392[0m 
[0;32m   (...)[0m
[1;32m   1629[0m [38;5;124;03m(``'green'``) or hex strings (``'#008000'``).[39;00m
[1;32m   1630[0m [38;5;124;03m"""[39;00m
[1;32m   1631[0m kwargs [38;5;241m=[39m cbook[38;5;241m.[39mnormalize_kwargs(kwargs, mlines[38;5;241m.[39mLine2D)
[0;32m-> 1632[0m lines [38;5;241m=[39m [[38;5;241m*[39m[38;5;28mself[39m[38;5;241m.[39m_get_lines([38;5;241m*[39margs, data[38;5;241m=[39mdata, [38;5;241m*[39m[38;5;241m*[39mkwargs)]
[1;32m   1633[0m [38;5;28;01mfor[39;00m line [38;5;129;01min[39;00m lines:
[1;32m   1634[0m     [38;5;28mself[39m[38;5;241m.[39madd_line(line)

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/axes/_base.py:312[0m, in [0;36m_process_plot_var_args.__call__[0;34m(self, data, *args, **kwargs)[0m
[1;32m    310[0m     this [38;5;241m+[39m[38;5;241m=[39m args[[38;5;241m0[39m],
[1;32m    311[0m     args [38;5;241m=[39m args[[38;5;241m1[39m:]
[0;32m--> 312[0m [38;5;28;01myield from[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_plot_args[49m[43m([49m[43mthis[49m[43m,[49m[43m [49m[43mkwargs[49m[43m)[49m

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/axes/_base.py:538[0m, in [0;36m_process_plot_var_args._plot_args[0;34m(self, tup, kwargs, return_kwargs)[0m
[1;32m    536[0m     [38;5;28;01mreturn[39;00m [38;5;28mlist[39m(result)
[1;32m    537[0m [38;5;28;01melse[39;00m:
[0;32m--> 538[0m     [38;5;28;01mreturn[39;00m [l[[38;5;241m0[39m] [38;5;28;01mfor[39;00m l [38;5;129;01min[39;00m result]

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/axes/_base.py:538[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m    536[0m     [38;5;28;01mreturn[39;00m [38;5;28mlist[39m(result)
[1;32m    537[0m [38;5;28;01melse[39;00m:
[0;32m--> 538[0m     [38;5;28;01mreturn[39;00m [l[[38;5;241m0[39m] [38;5;28;01mfor[39;00m l [38;5;129;01min[39;00m result]

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/axes/_base.py:531[0m, in [0;36m<genexpr>[0;34m(.0)[0m
[1;32m    528[0m [38;5;28;01melse[39;00m:
[1;32m    529[0m     labels [38;5;241m=[39m [label] [38;5;241m*[39m n_datasets
[0;32m--> 531[0m result [38;5;241m=[39m ([43mmake_artist[49m[43m([49m[43mx[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[43mj[49m[43m [49m[38;5;241;43m%[39;49m[43m [49m[43mncx[49m[43m][49m[43m,[49m[43m [49m[43my[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[43mj[49m[43m [49m[38;5;241;43m%[39;49m[43m [49m[43mncy[49m[43m][49m[43m,[49m[43m [49m[43mkw[49m[43m,[49m
[1;32m    532[0m [43m                      [49m[43m{[49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mlabel[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[43mlabel[49m[43m}[49m[43m)[49m
[1;32m    533[0m           [38;5;28;01mfor[39;00m j, label [38;5;129;01min[39;00m [38;5;28menumerate[39m(labels))
[1;32m    535[0m [38;5;28;01mif[39;00m return_kwargs:
[1;32m    536[0m     [38;5;28;01mreturn[39;00m [38;5;28mlist[39m(result)

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/axes/_base.py:351[0m, in [0;36m_process_plot_var_args._makeline[0;34m(self, x, y, kw, kwargs)[0m
[1;32m    349[0m default_dict [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_getdefaults([38;5;28mset[39m(), kw)
[1;32m    350[0m [38;5;28mself[39m[38;5;241m.[39m_setdefaults(default_dict, kw)
[0;32m--> 351[0m seg [38;5;241m=[39m [43mmlines[49m[38;5;241;43m.[39;49m[43mLine2D[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m
[1;32m    352[0m [38;5;28;01mreturn[39;00m seg, kw

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/lines.py:393[0m, in [0;36mLine2D.__init__[0;34m(self, xdata, ydata, linewidth, linestyle, color, marker, markersize, markeredgewidth, markeredgecolor, markerfacecolor, markerfacecoloralt, fillstyle, antialiased, dash_capstyle, solid_capstyle, dash_joinstyle, solid_joinstyle, pickradius, drawstyle, markevery, **kwargs)[0m
[1;32m    389[0m [38;5;28mself[39m[38;5;241m.[39mset_markeredgewidth(markeredgewidth)
[1;32m    391[0m [38;5;66;03m# update kwargs before updating data to give the caller a[39;00m
[1;32m    392[0m [38;5;66;03m# chance to init axes (and hence unit support)[39;00m
[0;32m--> 393[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mupdate[49m[43m([49m[43mkwargs[49m[43m)[49m
[1;32m    394[0m [38;5;28mself[39m[38;5;241m.[39mpickradius [38;5;241m=[39m pickradius
[1;32m    395[0m [38;5;28mself[39m[38;5;241m.[39mind_offset [38;5;241m=[39m [38;5;241m0[39m

File [0;32m~/Documents/Cours/FISA/envbook/lib/python3.8/site-packages/matplotlib/artist.py:1064[0m, in [0;36mArtist.update[0;34m(self, props)[0m
[1;32m   1062[0m             func [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mset_[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m   1063[0m             [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m callable(func):
[0;32m-> 1064[0m                 [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m[38;5;28mtype[39m([38;5;28mself[39m)[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m!r}[39;00m[38;5;124m object [39m[38;5;124m"[39m
[1;32m   1065[0m                                      [38;5;124mf[39m[38;5;124m"[39m[38;5;124mhas no property [39m[38;5;132;01m{[39;00mk[38;5;132;01m!r}[39;00m[38;5;124m"[39m)
[1;32m   1066[0m             ret[38;5;241m.[39mappend(func(v))
[1;32m   1067[0m [38;5;28;01mif[39;00m ret:

[0;31mAttributeError[0m: 'Line2D' object has no property 'fontsize'
AttributeError: 'Line2D' object has no property 'fontsize'

